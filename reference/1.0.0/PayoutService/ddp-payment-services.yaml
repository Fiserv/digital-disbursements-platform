#-------------------------------------
# Initial Version
# Added nickname
# Added Reversal Code for ACH reversal
# Added PayPal source separated from Venmo
#-------------------------------------
openapi: 3.0.0
info:
  version: 0.0.3
  title: Digital Disbursement Platform Payment APIs
  description: This API Specification document list required APIs for initializing & disbursed Payments or  canceling payments. Provided list of Payment methods are enabled for merchant.

servers:
  - url:  https://qa.api.firstdata.com
    description: This url is for QA testing.
  - url:  https://int.api.firstdata.com
    description: This url is for customer testing.
  - url: https://prod.api.firstdata.com
    description: This is production url.

paths:
  /ddp/v1/payments:
    post:
      x-group-name: Payment Service
      x-proxy-name: Create & Pay
      # x-child-product-name: Payout Service
      tags:
        - Digital Disbursement Platform Payment APIs
      description: This API supports complete disbursement of fund to an individual of company recipient. Payment Initialization & Disbursement - Merchants provides the payment, recipient and Card information for payment initialization & disbursement.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema: {
            type: string,
            default: "Api-Key"
          }
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema: {
            type: string,
            default: "Timestamp"
          }
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema: {
            type: string,
            default: "Authorization"
          }
        - in: header
          name: X-Access-Token
          description: Token provided by DDP along with public key /tokens API. This is required for encrypted PCI data vaulting. This is to identify public key associated with access token to decrypt the PCI data.
          required: false
          schema: {
            type: string,
            default: "X-Access-Token"
          }
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema: {
            type: string,
            default: "Client-Request-Id"
          }
        - in: header
          name: Content-Type
          description: used to indicate the media type of the resource.
          required: true
          schema: {
            type: string,
            default: "application/json"
          }
          example: application/json

      requestBody:
        description: Details required for provision a PAN data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDisbursementRequest'
            examples:
              Create - Single Consumer Request:
                summary: Single Consumer Request
                $ref: '#/components/examples/SingleConsumerRequest'
              Create - Multi Consumer Request:
                summary: Multi Consumer Request
                $ref: '#/components/examples/MultiConsumerRequest'
              Create - Single Company Request:
                summary: Single Company Request
                $ref: '#/components/examples/SingleCompanyRequest'
              Create - Multi Company Request:
                summary: Multi Company Request
                $ref: '#/components/examples/MultiCompanyRequest'
              Create and Pay - Debit Request:
                summary: Debit Request
                $ref: '#/components/examples/DisburseCard'
              Create and Pay - ACH Request:
                summary: ACH Request
                $ref: '#/components/examples/DisburseACH'
              Create and Pay - Money Network Request:
                summary: Money Network Request
                $ref: '#/components/examples/DisburseMoneyNetwork'
              Create and Pay - Venmo Request:
                summary: Venmo Request
                $ref: '#/components/examples/DisburseVenmo'
              Create and Pay - Paypal Email Request:
                summary: Paypal Email Request
                $ref: '#/components/examples/DisbursePaypalEmail'
              Create and Pay - Paypal Phone Request:
                summary: Paypal Phone Request
                $ref: '#/components/examples/DisbursePaypalPhone'
              Create and Pay - Coinbase Request:
                summary: Coinbase Request
                $ref: '#/components/examples/DisburseCoinbase'
              Create and Pay - Echeck Request:
                summary: Coinbase Request
                $ref: '#/components/examples/DisburseEcheck'
              Create and Pay - Token Request:
                summary: Token Request
                $ref: '#/components/examples/DisburseToken'
              Create and Pay - Visa+ Request:
                summary: Token Request
                $ref: '#/components/examples/P2PVisaPlusRequest'
              Create and Pay - P2P Request:
                summary: Token Request
                $ref: '#/components/examples/P2PTransArmorTokenRequest'

      responses:
        '201':
          description: Initialization response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDisbursementResponse'
        '400':
          description: Initialization response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Initialization response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Initialization response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /ddp/v1/payments/{transactionId}/cancel:
    patch:
      x-group-name: Payment Service
      x-proxy-name: Cancel Payment By TransactionId
      # x-child-product-name: Payout Service
      tags:
        - Digital Disbursement Platform Payment APIs
      description: This API supports to cancel the transactions using transaction ID for pending transactions. In case of ACH, cancellation can be done once the payments is disbursed to recipient(i.e - reversal of an original transaction).
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema: {
            type: string,
            default: "Api-Key"
          }
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema: {
            type: string,
            default: "Timestamp"
          }
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema: {
            type: string,
            default: "Authorization"
          }
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema: {
            type: string,
            default: "Client-Request-Id"
          }
        - in: header
          name: Content-Type
          description: used to indicate the media type of the resource.
          required: true
          schema: {
            type: string,
            default: "application/json"
          }
          example: application/json
        - in: path
          name: transactionId
          description: when called by merchant value can be 1. Transaction Id generated at the time of payment initialization 2. Merchant provided reference Number. when called by recipient, value can be 1. payment Id Id generated at the time of payment initialization
          required: true
          schema: {
            type: string,
            default: "transactionId"
          }

      requestBody:
        description: Details required for disbursement request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'

      responses:
        '200':
          description: provision response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelResponse'
        '400':
          description:  Initialization cancel response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Initialization cancel response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Initialization cancel response - not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Initialization cancel response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'


  /ddp/v1/payments/{merchantTransactionId}/cancel:
    patch:
      x-group-name: Payment Service
      x-proxy-name: Cancel Payment By Merchant TransactionId
      # x-child-product-name: Payout Service
      tags:
        - Digital Disbursement Platform Payment APIs
      description: This API supports to cancel the transactions using transaction ID for pending transactions. In case of ACH, cancellation can be done once the payments is disbursed to recipient(i.e - reversal of an original transaction).
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema: {
            type: string,
            default: "Api-Key"
          }
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema: {
            type: string,
            default: "Timestamp"
          }
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema: {
            type: string,
            default: "Authorization"
          }
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema: {
            type: string,
            default: "Client-Request-Id"
          }
        - in: header
          name: Content-Type
          description: used to indicate the media type of the resource.
          required: true
          schema: {
            type: string,
            default: "application/json"
          }
          example: application/json
        - in: path
          name: merchantTransactionId
          description: Provided by merchant and must be associated with transaction Id.
          required: true
          schema: {
            type: string,
            default: "merchantTransactionId"
          }

      requestBody:
        description: Details required for disbursement request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'

      responses:
        '200':
          description: provision response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelResponse'
        '400':
          description:  Initialization cancel response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Initialization cancel response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Initialization cancel response - not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Initialization cancel response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /ddp/v1/payments/{id}/disburse:
    post:
      x-group-name: Payment Service
      x-proxy-name: Disburse Payment
      # x-child-product-name: Payout Service
      tags:
        - Digital Disbursement Platform Payment APIs
      description: This API collects the Payment information make a payment.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema: {
            type: string,
            default: "Api-Key"
          }
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema: {
            type: string,
            default: "Timestamp"
          }
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema: {
            type: string,
            default: "Authorization"
          }
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema: {
            type: string,
            default: "Client-Request-Id"
          }
        - in: header
          name: X-Access-Token
          description: Token provided by DDP along with public key /tokens API. This is required for encrypted PCI data vaulting. This is to identify public key associated with access token to decrypt the PCI data.
          required: false
          schema: {
            type: string,
            default: "X-Access-Token"
          }
        - in: header
          name: Content-Type
          description: used to indicate the media type of the resource.
          required: true
          schema: {
            type: string,
            default: "application/json"
          }
          example: application/json
        - in: path
          name: id
          description: Id generated at the time of payment request initialization. This is paymentId.
          required: true
          schema: {
            type: string,
            default: "id"
          }

      requestBody:
        description: Details required for disbursement request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisbursePayment'
      responses:
        '201':
          description: Disbursement response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementResponse'
        '400':
          description: Disbursement response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Disbursement response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Disbursement response - not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Disbursement response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /ddp/v1/payments/{id}/methods:
    get:
      x-group-name: Payment Service
      x-proxy-name: Get Payment Methods
      # x-child-product-name: Payout Service
      tags:
        - Digital Disbursement Platform Payment APIs
      description: This API returns all the payment methods for a merchant is enabled  and fee associated with those methods.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema: {
            type: string,
            default: "Api-Key"
          }
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema: {
            type: string,
            default: "Timestamp"
          }
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema: {
            type: string,
            default: "Authorization"
          }
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema: {
            type: string,
            default: "Client-Request-Id"
          }
        - in: header
          name: Content-Type
          description: used to indicate the media type of the resource.
          required: true
          schema: {
            type: string,
            default: "application/json"
          }
          example: application/json
        - in: path
          name: id
          description:  TransactionId/merchantTransactionId associated with a transaction.
          required: true
          schema: {
            type: string,
            default: "id"
          }

      responses:
        '200':
          description: Transactions response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsResponse'
        '400':
          description:  Transactions response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Transactions response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Transactions response - Recipient not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Transactions response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /ddp/v1/fxrate:
    get:
      x-group-name: Payment Service
      x-proxy-name: Get Foreign Exchange Rate
      tags:
        - Digital Disbursement Platform Payment APIs
      description: This API returns currency conversion details which will be made available to Merchant as value added service.
      parameters:
        - in: query
          name: fromCurrencyCode
          description: ISO4127 Source Currency Code (default USD).
          required: false
          schema:
            type: string
        - in: query
          name: toCurrencyCode
          description: ISO4127 Target Currency Code.
          required: true
          schema:
            type: string
        - in: query
          name: fromTransAmount
          description: Conversion Amount (default 1).
          required: false
          schema:
            type: integer
        - in: query
          name: cardBIN
          description: CardBin Number
          required: false
          schema:
            type: string
        - in: query
          name: network
          description: Network should be Visa/MasterCard
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Currency Conversion response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyConversionResponse'
        '400':
          description:  Currency Conversion response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Currency Conversion response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

components:
  schemas:
    ##-------------------------------------
    ## Response Model
    ##-------------------------------------

    DisbursementRequest:
      title: Initialization request object model.
      type: object
      required:
        - amount
        - recipient
        - merchantTransactionId
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        recipient:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/RecipientInfo'
        merchantTransactionId:
          description: Provided by merchant and must be associated with transaction Id.
          type: string
          example: "b4d44892-5b8d-11ed-9b6a-0242ac120002"
          writeOnly: true
        batchNumber:
          description: Provided by FED to merchant.
          type: string
          example: "0242ac120002"
          writeOnly: true
        applyDate:
          $ref: '#/components/schemas/ApplyDate'
        customFields:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true

    CreateDisbursementRequest:
      title: Create and Pay request object model.
      type: object
      required:
        - amount
        - recipient
        - merchantTransactionId
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        sender:
          $ref: '#/components/schemas/SenderInfo'
        recipient:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/RecipientInfo'
        merchantTransactionId:
          description: Provided by merchant and must be associated with transaction Id.
          type: string
          example: "b4d44892-5b8d-11ed-9b6a-0242ac120002"
          writeOnly: true
        transactionPurpose:
          $ref: '#/components/schemas/TransactionPurpose'
        statementDescriptor:
          $ref: '#/components/schemas/StatementDescriptor'
        customFields:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true

    DisbursePayment:
      title: Initialization request object model.
      type: object
      required:
        - amount
        - recipient
        - merchantTransactionId
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        recipient:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/RecipientInformation'
        merchantTransactionId:
          description: Provided by merchant and must be associated with transaction Id.
          type: string
          example: "b4d44892-5b8d-11ed-9b6a-0242ac120002"
          writeOnly: true
        batchNumber:
          description: Provided by FED to merchant.
          type: string
          example: "0242ac120002"
          writeOnly: true
        applyDate:
          $ref: '#/components/schemas/ApplyDate'
        customFields:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true


    DirectDisbursePayment:
      title: Direct Disbursement request object model.
      type: object
      required:
        - amount
        - recipient
        - merchantTransactionId
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        recipient:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/RecipientInformation'
        merchantTransactionId:
          description: Provided by merchant and must be associated with transaction Id.
          type: string
          example: "b4d44892-5b8d-11ed-9b6a-0242ac120002"
          writeOnly: true


    DisbursementResponse:
      description: Model for events that are published when triggered in the system, or as part of a process like a transaction.
      type: object
      required:
        - transactionId
        - created
        - recipient
        - transactionStatus
        - merchantTransactionId
      properties:
        transactionId:
          description: Uniquely identifies an event and related message.
          type: string
          readOnly: true
          example: "TID-b4d472f4-5b8d-11ed-9b6a-0242ac120002"
        merchantTransactionId:
          $ref: '#/components/schemas/MerchantTransactionId'
        applyDate:
          $ref: '#/components/schemas/ApplyDate'
        transactionDate:
          $ref: '#/components/schemas/TransactionDate'
        batchNumber:
          description: Provided by FED to merchant.
          type: string
          example: "c2RnYXJ0aHR3ZXN3eXNkVVC"
          writeOnly: true
        created:
          description: Epoch timestamp in the initiating system for the event
          type: number
          example: 1501725477
        recipient:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/PaymentResponse'
        transactionStatus:
          $ref: '#/components/schemas/TransactionStatus'

    CreateDisbursementResponse :
      description: Model for events that are published when triggered in the system, or as part of a process like a transaction.
      type: object
      required:
        - transactionId
        - created
        - recipient
        - transactionStatus
        - merchantTransactionId
      properties:
        transactionId:
          description: Uniquely identifies an event and related message.
          type: string
          readOnly: true
          example: "TID-b4d472f4-5b8d-11ed-9b6a-0242ac120002"
        merchantTransactionId:
          $ref: '#/components/schemas/MerchantTransactionId'
        created:
          description: Epoch timestamp in the initiating system for the event
          type: number
          example: 1501725477
        recipient:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/RecipientResponse'
        transactionStatus:
          $ref: '#/components/schemas/TransactionStatus'
        totalTransactionAmount:
          $ref: '#/components/schemas/Amount'




    CancelRequest:
      title: Cancel transaction request model
      type: object
      required:
        - description
      properties:
        description:
          $ref: '#/components/schemas/CancelDescription'
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'
        reversalReason:
          description: This is to indicate the Reversal Reason. As of now applied only for ACH transactions.
          type: string
          example: "Wrong account information provided."
          maxLength: 75

    CancelResponse:
      title: Void response object model
      type: object
      required:
        - TransactionId
        - TransactionStatus
      properties:
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        paymentId:
          $ref: '#/components/schemas/PaymentId'
        transactionStatus:
          $ref: '#/components/schemas/TransactionStatus'

    PaymentMethodsResponse:
      title: Payment Methods Response model
      type: object
      properties:
        methods:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/PaymentMethods'
    CurrencyConversionResponse:
      title: Currency Conversion Response model
      type: object
      properties:
        sourceFx:
          $ref: '#/components/schemas/SourceAmount'
        targetFx:
          $ref: '#/components/schemas/TargetAmount'
        bankFee:
          $ref: '#/components/schemas/BankFee'
        exchangeRate:
          description: Display the Currency Conversion Rate for the target currency code.
          type: number
          example: 53.3676975

    ##-------------------------------------
    ## Object Model
    ##------------------------------------
    Amount:
      description: Transaction Amount of the Payment.
      type: object
      required:
        - total
        - currency
      properties:
        total:
          description: Indicates total amount, Transaction amount format $$$$$.cc.
          type: number
          example: 100.50
        currency:
          description: Currency code for the amount
          type: string
          example: "USD"

    Fee:
      description: Transaction Fee
      type: object
      required:
        - total
        - currency
      properties:
        total:
          description: Indicates total Fee, Transaction Fee format $$$$$.cc.
          type: number
          example: 0.00
        currency:
          description: Currency code for the amount
          type: string
          example: "USD"

    ACH:
      description: Information about an Recipient ACH account. Required when source is ACH
      type: object
      required:
        - accountNumber
        - routingNumber
        - type
      properties:
        accountNumber:
          type: string
          description: Unique number identifying the ACH account provided by Financial institution.
          example: '926582501563243'
        routingNumber:
          type: string
          description: Number to identify the financial institution
          example: '026009593'
        type:
          $ref: '#/components/schemas/AccountType'
        nickName:
          type: string
          description: Nick name provided by the recipient for the Account.
          example: 'John Smith'
        default:
          type: boolean
          description: This is to identify if the payment methods should be set as default payment method for recipient.

    Address:
      description: A physical mailing address for this card holder.
      type: object
      required:
        - type
        - street
        - houseNumberOrName
        - city
        - stateOrProvince
        - postalCode
        - country
      properties:
        type:
          description: Canonical type values of "work", "home", "billing" and "other".
          type: string
        houseNumberOrName:
          description: House number or name of the address
          type: string
        street:
          description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
          type: string
        city:
          description: The city or locality component.
          type: string
        stateOrProvince:
          description: The state or region component.
          type: string
        postalCode:
          description: The zip code or postal code component.
          type: string
        country:
          description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-3" code format; e.g., the United States and Sweden are "USA" and "SWE", respectively.
          type: string
        formatted:
          description: The full mailing address, formatted for display or use with a mailing label.
          type: string
        primary:
          description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
          type: boolean
      example:
        type: "work"
        street: "100 Universal City Plaza"
        city: "Hollywood"
        stateOrProvince: "CA"
        postalCode: "91608"
        country: "USA"
        formatted: "100 Universal City Plaza\nHollywood, CA 91608 US"
        primary: true

    Card:
      description: Information on a Debit account. Required when source is DEBIT
      type: object
      required:
        - cardNumber
        - expiryDate
      properties:
        cardNumber:
          description: Primary Card number, can only be sent when vaulting an account.
          type: string
          example: "4111111111111111"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        default:
          type: boolean
          description: This is to identify if the payment methods should be set as default payment method for recipient.

    Email:
      description: (Request Only) Email address for the user.
      type: object
      required:
        - value
      properties:
        type:
          description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
          type: string
          writeOnly: true
        value:
          description: The value SHOULD be specified according to RFC5321.
          type: string
          writeOnly: true
        primary:
          description:
            Defines if this entry is to be used as the primary or default for the
            user.
          type: boolean
          default: false
          writeOnly: true
      example:
        value: bjensen@example.com
        type: work
        primary: true

    PaymentMethods:
      description: List of payment method type and fee.
      type: object
      required:
        - paymentType
      properties:
        source:
          $ref: '#/components/schemas/FundingSourceType'
        fee:
          $ref: '#/components/schemas/Fee'

    PaymentInfo:
      description: Details about recipient and amount associated with the recipient.
      type: object
      required:
        - paymentType
      properties:
        paymentId:
          $ref: '#/components/schemas/PaymentId'
        amount:
          $ref: '#/components/schemas/Amount'
        fee:
          $ref: '#/components/schemas/Fee'
        paymentType:
          description: Type of disbursement - wages, claims, promotions, loans, refund etc
          example: "wages"
          type: string
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'

    SenderInfo:
      description: Conditional, Sender profile and fund source information, Required for Person to Person(P2P) Payments.
      type: object
      required:
        - profileInfo
        - fundingAccount

      properties:
        profileInfo:
          $ref: '#/components/schemas/SenderProfileInfo'
        fundingAccount:
          $ref: '#/components/schemas/SourceAccount'

        transactionIdentifier:
          description: transaction id provided by Visa or Mastercard for pull funds
          type: string
          example: '01323464673829290200101'
    SenderProfileInfo:
      description: Sender Profile information
      type: object
      required:
        - firstName
        - lastName
        - dateOfBirth
        - address
      properties:
        firstName:
          description: Sender first name
          type: string
          example: 'David'
        lastName:
          description: Sender last name
          type: string
          example: 'Charles'
        dateOfBirth:
          description: Sender date of birth in format mm/dd/yyyy
          type: string
          example: '12/24/2011'
        nationality:
          description: ISO 3 country code for country of nationality
          type: string
          example: 'USA'
        birthCountry:
          description: ISO 3 country code for country of nationality
          type: string
          example: 'USA'
        occupation:
          description: occupation of the sender
          type: string
          example: 'Software Engineer'
        emailAddress:
          $ref: '#/components/schemas/Email'
        phoneNumber:
          $ref: '#/components/schemas/Phone'
        address:
          $ref: '#/components/schemas/Address'
    RecipientPaymentInfo:
      description: Details about payment type and status associated with the recipient.
      type: object
      required:
        - paymentId
        - paymentType
        - paymentStatus
      properties:
        paymentId:
          $ref: '#/components/schemas/PaymentId'
        paymentType:
          description: Type of disbursement - wages, claims, promotions, loans, refund etc
          example: "wages"
          type: string
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'


    RecipientInfo:
      description: Details about recipient and amount associated with the recipient.
      type: object
      required:
        - recipientProfileInfo
        - payments
      properties:
        recipientProfileInfo:
          $ref: '#/components/schemas/RecipientProfileInfo'
        description:
          $ref: '#/components/schemas/Description'
        payments:
          $ref: '#/components/schemas/PaymentInfo'
        source:
          $ref: '#/components/schemas/FundingSourceType'
        card:
          $ref: '#/components/schemas/Card'
        ach:
          $ref: '#/components/schemas/ACH'
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        venmo:
          $ref: '#/components/schemas/Venmo'
        paypal:
          $ref: '#/components/schemas/Paypal'
        echeck:
          $ref: '#/components/schemas/ECheck'
        visaPlus:
          $ref: '#/components/schemas/VisaPlus'

    CreateAndPayRecipientInfo:
      description: Details about recipient.
      type: object
      required:
        - recipientProfileInfo
      properties:
        recipientProfileInfo:
          $ref: '#/components/schemas/RecipientProfileInfo'
        payments:
          $ref: '#/components/schemas/PaymentInfo'


    RecipientInformation:
      description: Details about recipient and amount associated with the recipient.
      type: object
      required:
        - recipientProfileInfo
        - payments
      properties:
        recipientProfileInfo:
          $ref: '#/components/schemas/RecipientProfileInformation'
        description:
          $ref: '#/components/schemas/Description'
        payments:
          $ref: '#/components/schemas/PaymentInfo'
        source:
          $ref: '#/components/schemas/FundingSourceType'
        card:
          $ref: '#/components/schemas/Card'
        ach:
          $ref: '#/components/schemas/ACH'
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        venmo:
          $ref: '#/components/schemas/Venmo'
        paypal:
          $ref: '#/components/schemas/Paypal'
        echeck:
          $ref: '#/components/schemas/ECheck'
        visaPlus:
          $ref: '#/components/schemas/VisaPlus'



    RecipientProfileInformation:
      description: This Request model is for Recipient Profile information
      type: object
      required:
        - recipientType
        - firstName
        - lastName
        - emailAddress
        - DateOfBirth/TIN
        - merchantCustomerId/recipientId
        - address
      properties:
        merchantCustomerId:
          $ref: '#/components/schemas/MerchantCustomerId'


    RecipientProfileInfo:
      description: This Request model is for Recipient Profile information
      type: object
      required:
        - recipientType
        - firstName
        - lastName
        - emailAddress
        - DateOfBirth/TIN
        - merchantCustomerId/recipientId
        - address
      properties:
        recipientType:
          $ref: '#/components/schemas/RecipientType'
        recipientId:
          $ref: '#/components/schemas/RecipientId'
        merchantCustomerId:
          $ref: '#/components/schemas/MerchantCustomerId'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        dateOfBirth:
          $ref: '#/components/schemas/DateOfBirth'
        tin:
          $ref: '#/components/schemas/TIN'
        emailAddress:
          $ref: '#/components/schemas/Email'
        phoneNumber:
          $ref: '#/components/schemas/Phone'
        preferredLanguage:
          $ref: '#/components/schemas/PreferredLanguage'
        status:
          $ref: '#/components/schemas/RecipientStatus'
        reason:
          $ref: '#/components/schemas/Reason'
        guest:
          $ref: '#/components/schemas/Guest'
        address:
          $ref: '#/components/schemas/Address'
        doingBusinessAs:
          $ref: '#/components/schemas/DoingBusinessAs'
        comments:
          $ref: '#/components/schemas/Comments'
        ceatedBy:
          $ref: '#/components/schemas/CreatedBy'
        updatedBy:
          $ref: '#/components/schemas/UpdatedBy'

    PaymentResponse:
      description: Details about notification message.
      type: object
      required:
        - merchantCustomerId
        - recipientId
        - merchantTransactionId
        - payments
      properties:
        merchantCustomerId:
          $ref: '#/components/schemas/MerchantCustomerId'
        recipientId:
          $ref: '#/components/schemas/RecipientId'
        payments:
          $ref: '#/components/schemas/PaymentInfo'
        source:
          $ref: '#/components/schemas/FundingSourceType'


    RecipientResponse:
      description: Details about create and Pay response message.
      type: object
      required:
        - merchantCustomerId
        - recipientId
        - merchantTransactionId
        - payments
      properties:
        merchantCustomerId:
          $ref: '#/components/schemas/MerchantCustomerId'
        recipientId:
          $ref: '#/components/schemas/RecipientId'
        payments:
          $ref: '#/components/schemas/RecipientPaymentInfo'
        portalUrl:
          description: Digital Payouts url
          example: "https://qa.digitalpayouts.com/?gid=EE680F#/authentication/guest/{{TOKEN}}"
          type: string




    ExpiryDate:
      description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
      type: object
      required:
        - month
        - year
      properties:
        month:
          type: string
          description: Month format 'MM'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "09"
        year:
          type: string
          description: Year format 'YY'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "20"
        singleValue:
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
          minLength: 4
          maxLength: 6
          readOnly: true

    NVP:
      title:  Name and Value pair to capture the data elements for custom fields
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        valueAsList:
          type: array
          minItems: 0
          items:
            type: string


    Prepaid:
      description: Prepaid Money Network account information. Required when source is PREPAID
      type: object
      properties:
        cardNumber:
          description: Prepaid card number.
          type: string
          example: "6759-6498-2643-0010"
        accountNumber:
          description: Prepaid card number.
          type: string
          example: "4226-4982-6438-0010"
        default:
          type: boolean
          description: This is to identify if the payment methods should be set as default payment method for recipient.

    Phone:
      description: Phone number for the user.
      type: object
      required:
        - countryCode
        - value
      properties:
        countryCode:
          description: Country code for the phone number.
          type: string
        value:
          description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
          type: string
        type:
          description: Often has typical values of "work","billing", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
          type: string
        extension:
          description: Defines the extension of the phone number.
          type: string
      example:
        code: +91
        value: 704-884-2754
        type: billing
        extension: "2145"

    Venmo:
      description: Information about a Venmo account. Required when source is VENMO
      type: object
      properties:
        phone:
          $ref: '#/components/schemas/Phone'

    Paypal:
      description: Information about a Paypal account.  Required when source is PAYPAL
      type: object
      properties:
        phone:
          $ref: '#/components/schemas/Phone'
        paypalPayerId:
          type: string
          description: The encrypted PayPal account number.
        emailAddress:
          $ref: '#/components/schemas/Email'

    ECheck:
      description: Information about the eCheck.  Required when source is ECHECK
      type: object
      required:
        - recipient
        - name
      properties:
        email:
          $ref: '#/components/schemas/Email'
        name:
          type: string
          description: Name of the recipient
          example: "John Smith "
    VisaPlus:
      description: Visa Plus details, Required when source is VISAPLUS
      type: object
      required:
        - payName
      properties:
        payName:
          description: Visa Plus Pay name
          example: '+JohnSmith.abc'
          type: string
        last4Phone:
          description: Last 4 for phone number used for Visa Plus account
          example: '3456'
          type: string
    SourceAccount:
      description: Details of funding account used to pull funds. Required for P2P Payments
      type: object
      required:
        - accountId
        - type
      properties:
        accountId:
          description: Account number/Identifier (Bank_account, PAN, TOKEN) used to pull funds, In case accountId is CARD or BANK_ACCOUNT it should be encrypted. Not required when type is CASH
          type: string
          example: '4567890123455'
        type:
          description: Type of account used to pull funds. <br/> CARD for Credit, Debit, Prepaid Card <br/> BANK_ACCOUNT for Deposit Account <br/> TRANS_ARMOR when accountId has trans armor token <br/> OTHER when source of funds is other than Card/Trans Armor Token, Bank Account or Cash
          type: string
          example: 'CARD'
          enum:
            - CARD
            - BANK_ACCOUNT
            - TRANS_ARMOR
            - CASH
            - OTHER
        routingNumber:
          description: Conditional, Required when type is BANK_ACCOUNT and Bank account is USA bank account
          type: string
          example: 026009593
    SourceAmount:
      description: Information about Source amount which needs to be converted
      type: object
      required:
        - total
        - currency
      properties:
        total:
          description: Indicates total amount
          type: number
          example: 100.00
        currency:
          description: Indicates ISO 4217 currency code for total amount
          type: string
          example: "AUD"

    TargetAmount:
      description: Information about Target amount which needs to be converted
      type: object
      required:
        - total
        - currency
      properties:
        total:
          description: Indicates Converted amount
          type: number
          example: 5336.7697500
        currency:
          description: Indicates ISO 4217 currency code for Converted amount
          type: string
          example: "INR"
    BankFee:
      description: Information about fee charge for the conversion amount
      type: object
      required:
        - total
      properties:
        total:
          description: Indicates Bank Fee Charges
          type: number
          example: 0

    MerchantCustomerId:
      description: This is provided by merchant at the time of payment initialization. This must be associated with recipient.
      type: string
      example: VGUTCYSKS-XVG

    MerchantTransactionId:
      description: This is provided by merchant at the time of payment initialization.
      type: string
      example: a6a91f99-b7af-4a44-9ddc-a33526ddda12

    RecipientId:
      title: Fiserv generated Id at the time of recipient onboarding.
      description: RecipientId, generated at the time of recipient onboarding.
      type: string
      readOnly: true
      example: de3bc78b-8ebc-4ae0-ba5e-0b5c0ae01e03

    Description:
      description: Description provided at the time of initialization by the merchant.
      type: string
      example: "Recipient details for Insurance XYZ.TEST.com"
      writeOnly: true
      minimum: 0
      maximum: 250

    CancelDescription:
      description: Description provided at the time of initialization by the merchant.
      type: string
      example: "Cancel transaction due to wrong amount."
      writeOnly: true
      minimum: 0
      maximum: 250


    TransactionId:
      description: Transaction id generated at the time of payment initialization.
      type: string
      example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
      readOnly: true

    PaymentId:
      description: Unique Identifier provided by disbursement platform at the time of initialization per recipient.
      type: string
      example: "8a34144657d0aa6e0157d3808ed000f2"
      readOnly: true
    PreferredLanguage:
      description: Preferred language for recipient emails and Recipient Portal. Provide if language is other than EN-US. Currently only EN-US is supported.
      type: string
      example: EN-US
    #-------------------------------------
    # Common Models
    #-------------------------------------

    Error:
      description: (Response Only) Model for error messaging
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              description: Detailed information about message format errors.
              type: array
              items:
                properties:
                  field:
                    description: The property or attribute associated with the error
                    type: string
                  message:
                    description: Information specific to a property or attribute.
                    type: string
        hostExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
      example:
        code: "40000"
        message: "Example Error"
        category: "example"
        developerInfo:
          developerMessage: "Invalid Message format in request payload"
          moreInfo: "https://www.example.com/errors/40000"
          fieldError:
            - field: "example id"
              message: "exampleId is mandatory"

    FirstName:
      description: First Name of the Recipient.
      type: string
      maxLength: 75
      example: John

    LastName:
      description: Last Name of the Recipient.
      type: string
      maxLength: 75
      example: Smith

    DateOfBirth:
      description: Date of Birth of the recipient. This is mandatory for non-business recipient.
      type: string
      maxLength: 10
      example: 11/11/2011

    TIN:
      description: TIN of the business recipient. This is mandatory for business recipient.
      type: string
      maxLength: 11
      example: 345-55-2345

    Reason:
      description: Reason code for the status Change Or Create
      type: string
      enum:
        - CLIENT_INITIATED
        - RECIPIENT_INITIATED
        - SYSTEM_INITIATED
        - FISERV_INITIATED
      default: CLIENT_INITIATED
      readOnly: true

    DoingBusinessAs:
      description: Merchant DBA while adding the recipient details
      type: string
      maxLength: 75
      example: Fiserv LLC.

    Comments:
      description: comments while adding the Recipient Profile.
      type: string
      maxLength: 250
      example: Recipient details for insurance company xyz.com

    Guest:
      description: To Identify to guest recipients.
      type: boolean
      example: false

    CreatedBy:
      description: ID of  person creating the record.
      type: string
      maxLength: 75
      example: 5533323323

    UpdatedBy:
      description: ID of the person updating the record.
      type: string
      maxLength: 75
      example: 5533323323

    RecipientType:
      description: Merchant should select the Recipient Type while adding the recipient details. Possible options are are Consumer or  Business.
      type: string
      example: Consumer

    ApplyDate:
      description: Apply date of the Payments.most of the cases apply date will be the current system date.
      type: string
      example: 10/14/2020
    TransactionDate:
      description: Transaction Date when the transaction is completed.
      type: string
      example: 10/14/2020



    #-------------------------------------
    # ENUM Models
    #-------------------------------------

    AccountType:
      title: AccountType
      description: Indicates the Type of Bank Account.
      type: string
      readOnly: false
      enum:
        - CHECKING
        - SAVINGS

    TransactionStatus:
      title: Indicates status of Transaction
      description: Indicates the status of an Transaction initialization operation. PD - Pending Disbursement, IP - In Process, TC - Transaction Complete, TV - Transaction Void, TE- Transaction Expired
      type: string
      readOnly: true
      enum:
        - TC
        - IP
        - TC
        - TV
        - TE

    PaymentStatus:
      title: Indicates status of Payment associated with transaction.
      description: Indicates the status of an Payment with respect of each payment operation. DP - Disbursement Pending, DI - Disbursed, DD- Disbursement Decline, PE- Payment expired,PC - Payment cancelled, IR - In Review.
      type: string
      readOnly: true
      enum:
        - DI
        - DP
        - DD
        - PE
        - PC
        - IR


    FundingSourceType:
      description: Describes the type of Payments options available.
      type: string
      enum:
        - DEBIT
        - ACH
        - PREPAID
        - TOKEN
        - VENMO
        - PAYPAL
        - ECHECK
        - VISAPLUS

    RecipientStatus:
      title: Indicates Recipient Status
      description: Recipient status indicated if the recipient is in good standing to receive payments.
      type: string
      readOnly: true
      enum:
        - ACTIVE
        - LOCKED
        - HOLD
        - CLOSED

    TokenProvider:
      title: Specify the list of token providers
      description: Fiserv support token providers. Disbursement is using ENROLMENT_VAULT to vault the call and uses token to disbursement payments.
      type: string
      enum:
        - TRANS_ARMOR
        - NETWORKS
        - SINGLE_USE_TOKEN
        - ENROLMENT_VAULT

    TSPID:
      description: A reference id provided to merchant in the response. This is to identify source of tokenReferenceId. possible values are define as enum.
      type: number
      enum:
        - 400
        - 501
        - 600
        - 300
        - 111
    TransactionPurpose:
      description: Conditional, Purpose of Payment is Required for P2P transactions.
      type: string
      enum:
        - FAMILY_SUPPORT
        - REGULAR_LABOR_TRANSFERS
        - TRAVEL_AND_TOURISM
        - EDUCATION
        - HOSPITALIZATION_AND_MEDICAL_TREATMENT
        - EMERGENCY_NEED
        - SAVINGS
        - GIFTS
        - CROWD_LENDING
        - CRYPTO_CURRENCY
        - REFUND_ORIGINAL_CARD
        - REFUND_NEW_CARD
        - OTHER
    StatementDescriptor:
      description:  The statement descriptor is the value that will be displayed on the recipient's bank or card statement Limited to max 22 characters,
        The statement descriptor is alphanumeric and can include spaces and some special characters (& * ' , - . _ ~)


    #-------------------------------------
    # response Models
    #-------------------------------------
    BadRequest:
      description: Bad request
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized

    NotFound:
      description: Not Found - The requested resource doesn't exist.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    ServerError:
      description: An unexpected server error occurred.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

  #-------------------------------------
  # Examples
  #-------------------------------------
  examples:
    SingleConsumerRequest:
      value: {
        "amount": {
          "total": 3,
          "currency": "USD"
        },
        "recipient": [
          {
            "recipientProfileInfo": {
              "address": {
                "type": "work",
                "street": "1255 Corporate Drive",
                "city": "Irving",
                "stateOrProvince": "CA",
                "postalCode": "91608",
                "country": "USA",
                "formatted": "1255 Corporate Drive,Irving, CA 91608 USA",
                "primary": true
              },
              "emailAddress": {
                "value": "madhank@test.com",
                "type": "work",
                "primary": true
              },
              "merchantCustomerId": "madhan91722211222221",
              "firstName": "Madhan",
              "lastName": "Kumar",
              "recipientType": "Consumer",

              "phoneNumber": {
                "code": 1,
                "value": "704-884-2754",
                "type": "billing",
                "extension": "2145"
              }
            },
            "payments": {
              "amount": {
                "total": 3,
                "currency": "USD"
              },
              "paymentType": "Claims"
            }
          }
        ],
        "merchantTransactionId": "merchant2112222000090",
        "batchNumber": "454567",
        "customFields": [
          {
            "key": "claim_number",
            "value": "765033"
          },
          {
            "key": "payment_number",
            "value": "8745665"
          },
          {
            "key": "incident_date",
            "value": "12/08/2020"
          },
          {
            "key": "date_issued",
            "value": "12/08/2020"
          },
          {
            "key": "coverage_paid",
            "value": "Test"
          },
          {
            "key": "bcc",
            "valueAsList": [
              "saranya.gnr@fiserv.com"
            ]
          },
          {
            "key": "cc",
            "valueAsList": [
              "madhan@gmail.com"
            ]
          }
        ]
      }

    MultiConsumerRequest:
      value: {
        "amount": {
          "total": 10,
          "currency": "USD"
        },
        "recipient": [
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "Madhan354233321",
              "recipientType": "Consumer",
              "firstName": "Madhan",
              "lastName": "kumar",
              "emailAddress": {
                "value": "madhankumar.s@fiserv.com",
                "type": "work",
                "primary": true
              },
              "phoneNumber": {
                "code": 1,
                "value": "704-884-2754",
                "type": "billing",
                "extension": "2145"
              },

              "address": {
                "type": "work",
                "street": "1255 Corporate Drive",
                "city": "Irving",
                "stateOrProvince": "CA",
                "postalCode": "91608",
                "country": "USA",
                "formatted": "1255 Corporate Drive,Irving, CA 91608 USA",
                "primary": true
              }
            },
            "payments": {
              "paymentType": "Claims"
            }
          },
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "vairamuthu2111",
              "recipientType": "Consumer",
              "firstName": "vairamuthu",
              "lastName": "chandrabalan",
              "emailAddress": {
                "value": "vairamuthu.chandrabalan1@fiserv.com",
                "type": "work",
                "primary": true
              },
              "phoneNumber": {
                "code": 1,
                "value": "704-884-1234",
                "type": "billing",
                "extension": "2145"
              },

              "address": {
                "type": "work",
                "street": "1255 Corporate Drive",
                "city": "Irving",
                "stateOrProvince": "CA",
                "postalCode": "91608",
                "country": "USA",
                "formatted": "1255 Corporate Drive,Irving, CA 91608 USA",
                "primary": true
              }
            },
            "payments": {
              "paymentType": "Claims"
            }
          }
        ],
        "merchantTransactionId": "merchantCustomerId-2220222-91",
        "batchNumber": "454567",
        "customFields": [
          {
            "key": "claim_number",
            "value": "765033"
          },
          {
            "key": "payment_number",
            "value": "8745665"
          },
          {
            "key": "incident_date",
            "value": "12/08/2020"
          },
          {
            "key": "date_issued",
            "value": "12/08/2020"
          },
          {
            "key": "coverage_paid",
            "value": "Test"
          },
          {
            "key": "bcc",
            "valueAsList": [
              "saranya.gnr@fiserv.com"
            ]
          },
          {
            "key": "cc",
            "valueAsList": [
              "madhan354@gmail.com"
            ]
          }
        ]
      }
    SingleCompanyRequest :
      value: {
        "amount": {
          "total": 35,
          "currency": "USD"
        },
        "recipient": [
          {
            "recipientProfileInfo": {
              "recipientType": "Company",
              "merchantCustomerId": "merchantCustomerId-R503",
              "tin": "123456789",
              "emailAddress": {
                "value": "gayathri.subramanian@fiserv.com",
                "type": "Work",
                "primary": true
              },
              "phoneNumber": {
                "code": 91,
                "value": "704-884-2754",
                "type": "billing",
                "extension": "2145"
              },

              "doingBusinessAs": "Tech computers",
              "guest": false,
              "address": {
                "type": "work",
                "street": "100 Universal City Plaza",
                "city": "Hollywood",
                "stateOrProvince": "CA",
                "postalCode": "91608",
                "country": "USA",
                "formatted": "100 Universal City Plaza, Hollywood, CA 91608 US",
                "primary": true
              }
            },
            "payments": {
              "amount": {
                "total": 35,
                "currency": "USD"
              },
              "paymentType": "Claims"
            }
          }
        ],
        "merchantTransactionId": "merchantTransactionId-32154011632",
        "batchNumber": "454567",
        "customFields": [
          {
            "key": "claim_number",
            "value": "3215406"
          },
          {
            "key": "incident_date",
            "value": "12/08/2020"
          },
          {
            "key": "date_issued",
            "value": "12/08/2020"
          },
          {
            "key": "coverage_paid",
            "value": "Business Recipient"
          },
          {
            "key": "bcc",
            "valueAsList": [
              "saranya.gnr@fiserv.com"
            ]
          },
          {
            "key": "cc",
            "valueAsList": [
              "madhan@gmail.com"
            ]
          }
        ]
      }
    MultiCompanyRequest :
      value: {
        "amount": {
          "total": 16,
          "currency": "USD"
        },
        "recipient": [
          {
            "recipientProfileInfo": {
              "recipientType": "Company",
              "merchantCustomerId": "merchantCustomerId-R5032222",
              "tin": "123456789",
              "emailAddress": {
                "value": "gayathri.subramanian@fiserv.com",
                "type": "Work",
                "primary": true
              },
              "phoneNumber": {
                "code": 91,
                "value": "704-884-2754",
                "type": "billing",
                "extension": "2145"
              },

              "doingBusinessAs": "Tech computers 1",
              "guest": false,
              "address": {
                "type": "work",
                "street": "100 Universal City Plaza",
                "city": "Hollywood",
                "stateOrProvince": "CA",
                "postalCode": "91608",
                "country": "USA",
                "formatted": "100 Universal City Plaza, Hollywood, CA 91608 US",
                "primary": true
              }
            },
            "payments": {
              "paymentType": "Claims"
            }
          },
          {
            "recipientProfileInfo": {
              "recipientType": "Company",
              "merchantCustomerId": "merchantCustomerId-R50322",
              "tin": "123456789",
              "emailAddress": {
                "value": "gokul.thiyagarajan@fiserv.com",
                "type": "Work",
                "primary": true
              },
              "phoneNumber": {
                "code": 91,
                "value": "704-884-2754",
                "type": "billing",
                "extension": "2145"
              },

              "doingBusinessAs": "Tech computers 2",
              "guest": false,
              "address": {
                "type": "work",
                "street": "100 Universal City Plaza",
                "city": "Hollywood",
                "stateOrProvince": "CA",
                "postalCode": "91608",
                "country": "USA",
                "formatted": "100 Universal City Plaza, Hollywood, CA 91608 US",
                "primary": true
              }
            },
            "payments": {
              "paymentType": "Claims"
            }
          }
        ],
        "merchantTransactionId": "merchantTransactionId-102211288225",
        "customFields": [
          {
            "key": "claim_number",
            "value": "765033"
          },
          {
            "key": "payment_number",
            "value": "8745665"
          },
          {
            "key": "incident_date",
            "value": "12/08/2020"
          },
          {
            "key": "date_issued",
            "value": "12/08/2020"
          },
          {
            "key": "coverage_paid",
            "value": "Test"
          },
          {
            "key": "bcc",
            "valueAsList": [
              "saranya.gnr@fiserv.com"
            ]
          },
          {
            "key": "cc",
            "valueAsList": [
              "madhan@gmail.com"
            ]
          }
        ]
      }
    DisburseCard:
      value: {
        "amount": {
          "total": 100.00,
          "currency": "USD"
        },
        "merchantTransactionId": "2508b1-7490q-9181-313-a1234567",
        "recipient": [
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "TestCompany001222"
            },
            "payments": {
              "paymentType": "Claims"
            },
            "description": "Sending money to TestCompany001222",
            "source": "DEBIT",
            "card": {
              "token": {
                "tokenId": "0bb956bb-3a21-498c-96b8-99df0601cad7",
                "tokenProvider": "ENROLMENT_VAULT"
              }
            }
          }
        ]
      }
    DisburseACH:
      value: {
        "amount": {
          "total": 50.00,
          "currency": "USD"
        },
        "merchantTransactionId": "2508b1-7490q-9181-313-a19234567",
        "recipient": [
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "TestCompany001222"
            },
            "payments": {
              "paymentType": "Claims"
            },
            "description": "Sending money to TestCompany001222",
            "source": "ACH",
            "ach": {
              "token": {
                "tokenId": "3ddc1871-1eff-4f13-82a4-078179b9d522",
                "tokenProvider": "ENROLMENT_VAULT"
              }
            }

          }
        ]

      }
    DisburseMoneyNetwork:
      value: {
        "amount": {
          "total": 50.00,
          "currency": "USD"
        },
        "merchantTransactionId": "2508b1-7490q-9181-313-a12664567",
        "recipient": [
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "TestCompany001222"
            },
            "payments": {
              "paymentType": "Claims"
            },
            "description": "Sending money to TestCompany001222",
            "source": "PREPAID",
            "prepaid": {
              "token": {
                "tokenId": "2b6003c3-c355-4d7a-9b72-a2d9e009da9f",
                "tokenProvider": "ENROLMENT_VAULT"
              }
            }
          }
        ]
      }
    DisburseVenmo:
      value: {
        "amount": {
          "total": 10.75,
          "currency": "USD"
        },
        "recipient": [
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "TestConsu222mer1221213113"
            },
            "description": "VINEET_INPUT",
            "payments": {
              "paymentType": "Claims"
            },
            "source": "VENMO",
            "venmo": {
              "phone": {
                "value": "9999991234"
              }
            }
          }
        ],
        "merchantTransactionId": "MERCHANTACHE2CK62251676581VN1527"
      }
    DisbursePaypalEmail:
      value: {
        "amount": {
          "total": 1.19,
          "currency": "USD"
        },
        "recipient": [
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "TestConsu22mer1211113"
            },
            "payments": {
              "paymentType": "Gaming"
            },
            "description": "Sending money to XXXXX",
            "source": "PAYPAL",
            "paypal": {
              "email": {
                "value": "amol@test.com"
              }
            }
          }
        ],
        "merchantTransactionId": "MERCHANTACHECK651676581VN14204"
      }
    DisbursePaypalPhone:
      value: {
        "amount": {
          "total": 1.19,
          "currency": "USD"
        },
        "recipient": [
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "TestConsu22mer1211113"
            },
            "payments": {
              "paymentType": "Claims"
            },
            "description": "Sending money to XXXXX",
            "source": "PAYPAL",
            "paypal": {
              "phone": {
                "value": "9999991234"
              }
            }
          }
        ],
        "merchantTransactionId": "MERCHANTACHE1CK65161176581VN141104"
      }
    DisburseCoinbase:
      value: {
        "amount": {
          "total": 1,
          "currency": "USD"
        },
        "merchantTransactionId": "2508b11-7490q-9118222232334567",
        "recipient": [
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "verisk2228"
            },
            "payments": {
              "paymentType": "Claims"
            },
            "description": "Sending money to Claims",
            "source": "COINBASE",
            "coinbase": {
              "token": {
                "tokenId": "b0b089fa-d51b-400e-9740-44cc031f926f",
                "tokenProvider": "ENROLMENT_VAULT"
              }
            }
          }
        ]
      }
    DisburseEcheck:
      value: {
        "amount": {
          "total": 10.75,
          "currency": "USD"
        },
        "recipient": [
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "TestConsumer15621888913"
            },
            "description": "VINEET_INPUT",
            "payments": {
              "paymentType": "Claims"
            },
            "source": "ECHECK"
          }
        ],
        "merchantTransactionId": "MERCHNAT_Transacto222nDDPCLX16"
      }
    DisburseToken:
      value: {
        "amount": {
          "total": 5,
          "currency": "USD"
        },
        "merchantTransactionId": "2508b1-7490q-912821-302122323-a11334125",
        "recipient": [
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "TestConsumer121888913"
            },
            "payments": {
              "paymentType": "Revenue Share"
            },
            "description": "Sending money 2nd time",
            "source": "TOKEN",
            "token": {
              "tokenId": "1787057788380013",
              "tokenProvider": "TRANS_ARMOR",
              "expiryDate": {
                "month": "MTI=",
                "year": "MjM="
              }
            }
          }
        ]
      }
    P2PVisaPlusRequest:
      value: {
        "amount": {
          "total": 100,
          "currency": "USD"
        },
        "sender": {
          "profile": {
            "firstName": "David",
            "lastName": "Charles",
            "dateOfBirth": "12/24/2011",
            "nationality": "USA",
            "birthCountry": "USA",
            "occupation": "Software Engineer",
            "emailAddress": {
              "value": "bjensen@example.com",
              "type": "work",
              "primary": true
            },
            "address": {
              "type": "work",
              "street": "100 Universal City Plaza",
              "city": "Hollywood",
              "stateOrProvince": "CA",
              "postalCode": "91608",
              "country": "US",
              "formatted": "100 Universal City Plaza\nHollywood, CA 91608 US",
              "primary": true
            }
          },
          "fundingAccount": {
            "accountId": "4567890123455",
            "type": "CARD"
          },

          "transactionIdentifier": "01323464673829290200101"
        },
        "recipient": [
          {
            "recipientProfileInfo": {
              "merchantCustomerId": "vendorId-0987613457398475",
              "dateOfBirth": "11/11/2011",
              "emailAddress": {
                "value": "bjensen@example.com",
                "type": "work",
                "primary": true
              },
              "address": {
                "type": "work",
                "street": "100 Universal City Plaza",
                "city": "Hollywood",
                "stateOrProvince": "CA",
                "postalCode": "91608",
                "country": "US",
                "formatted": "100 Universal City Plaza\nHollywood, CA 91608 US",
                "primary": true
              },
              "description": "New Recipinet",
              "ceatedBy": "User1234",
              "updatedBy": "User1235"
            },
            "description": "MERCHNAT_INPUT",
            "payments": {
              "paymentType": "wages"
            },
            "source": "VISAPLUS",
            "visaPlus": {
              "payName": "+JohnSmith.abc"
            }
          }
        ],
        "merchantTransactionId": "MERCHNAT_INPUT",
        "batchNumber": "MERCHNAT_INPUT",
        "applyDate": "04/03/2021",
        "customFields": [
          {
            "key": "payment_number",
            "value": "string",
            "valueAsList": [
              "string"
            ]
          },
          {
            "key": "string",
            "value": "string",
            "valueAsList": [
              "string"
            ]
          }
        ]
      }
    P2PTransArmorTokenRequest:
      value: {
        "amount": {
          "total": 100,
          "currency": "USD"
        },
        "sender": {
          "profile": {
            "firstName": "David",
            "lastName": "Charles",
            "dateOfBirth": "12/24/2011",
            "nationality": "USA",
            "birthCountry": "USA",
            "occupation": "Software Engineer",
            "emailAddress": {
              "value": "bjensen@example.com",
              "type": "work",
              "primary": true
            },
            "phoneNumber": {
              "countryCode": "+91",
              "value": "704-884-2754",
              "type": "Work",
              "extension": "2145"
            },
            "address": {
              "type": "work",
              "street": "100 Universal City Plaza",
              "city": "Hollywood",
              "stateOrProvince": "CA",
              "postalCode": "91608",
              "country": "US",
              "formatted": "100 Universal City Plaza\nHollywood, CA 91608 US",
              "primary": true
            }
          },
          "fundingAccount": {
            "accountId": "4567890123455",
            "type": "CARD"
          },

          "transactionIdentifier": "01323464673829290200101"
        },
        "recipient": [
          {
            "recipientProfileInfo": {
              "recipientType": "Consumer",
              "merchantCustomerId": "vendorId-0987613457398475",
              "firstName": "First Name",
              "lastName": "Last Name",
              "dateOfBirth": "11/11/2011",
              "emailAddress": {
                "value": "bjensen@example.com",
                "type": "work",
                "primary": true
              },
              "phoneNumber": {
                "countryCode": "+91",
                "value": "704-884-2754",
                "type": "Work",
                "extension": "2145"
              },
              "address": {
                "type": "work",
                "street": "100 Universal City Plaza",
                "city": "Hollywood",
                "stateOrProvince": "CA",
                "postalCode": "91608",
                "country": "US",
                "formatted": "100 Universal City Plaza\nHollywood, CA 91608 US",
                "primary": true
              },
              "description": "New Recipinet",
              "ceatedBy": "User1234",
              "updatedBy": "User1235"
            },
            "description": "MERCHNAT_INPUT",
            "source": "TOKEN",
            "token": {
              "tokenId": "292bb6b886fc4446894f878b7e32bd5e",
              "tokenProvider": "TRANS_ARMOR",
              "expiryDate": {
                "month": "09",
                "year": "20"
              }
            }
          }
        ],
        "merchantTransactionId": "MERCHNAT_INPUT",
        "transactionPurpose":"FAMILY_SUPPORT",
        "customFields": [
          {
            "key": "payment_number",
            "value": "string",
            "valueAsList": [
              "string"
            ]
          },
          {
            "key": "string",
            "value": "string",
            "valueAsList": [
              "string"
            ]
          }
        ]
      }

