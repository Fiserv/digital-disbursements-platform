#-------------------------------------
# Initial Version
#-------------------------------------
openapi: 3.0.0
info:
  version: 0.0.3
  title: Digital Disbursement Platform Vaulting APIs
  description: This Specification document lists the APIs required for vaulting recipient account.

servers:
  - url:  https://qa.api.firstdata.com
    description: This url is for QA testing.
  - url:  https://int.api.firstdata.com
    description: This url is for customer testing.
  - url: https://prod.api.firstdata.com
    description: This is production url.

paths:
  /ddp/v1/accounts/information-lookup:
    post:
      x-group-name: Account Services
      x-proxy-name: Account lookup
      x-child-product-name: Account Vaulting Service
      x-default-example: CardBinDetailsByTAToken
      tags:
        - Digital Disbursement Platform - Account payment method details
      description: This API is to provide card bin details to Merchant and if this card can be used for disbursement on DDP Platform.
      parameters:
        - in: header
          name: Api-Key
          description: >-
            An API key is a string value passed by a client app to the API
            proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: >-
            Authorization information for the request. Format- `HMAC
            {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: >-
            Contains a unique ID generated by the client that can be used for
            enforcing idempotency on POST actions. POSTs are inherently
            non-idempotent and submitting the exact same request multiple times
            would create duplicate resources. Note:- Omitting this header
            increases the risk of duplicate transactions.
          required: true
          schema:
            type: string

        - in: query
          name: remittance-role
          description: Conditional, required when information lookup for Sender. If not provided then it will default to Recipient
          required: false
          schema:
            $ref: '#/components/schemas/RemittanceRole'

      requestBody:
        description: Account details for information lookup
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLookupRequest'
      responses:
        '201':
          description: Account lookup Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLookupResponse'
        '400':
          description: New MN Card response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: New MN Card response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '409':
          description: New MN Card response - conflict response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: New MN Card response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
components:
  schemas:

  ##-------------------------------------
  ## Request Model
  ##-------------------------------------

    AccountLookupRequest:
      description: Account look up request, supports tokenProvider TRANS_ARMOR
      type: object
      required:
        - source
      properties:
        source:
          type: string
          description: Account Type
          enum:
            - TOKEN
            - DEBIT
            - RTP
        token:
          $ref: '#/components/schemas/ReferenceToken'
        card:
          $ref: '#/components/schemas/Card'
        ach:
          $ref: '#/components/schemas/Ach'

  ##-------------------------------------
  ## Response Model
  ##-------------------------------------

    AccountLookupResponse:
      title: Account lookup response
      description: Account lookup response
      type: object
      properties:
        source:
          description: Account type of details.
          type: string
          enum:
            - DEBIT
          example: 'DEBIT'
        cardDetails:
          $ref: '#/components/schemas/CardDetails'

  ##-------------------------------------
  ## Object Model
  ##------------------------------------

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        valueAsList:
          type: array
          minItems: 0
          items:
            type: string

    CardDetails:

      description: >
        Card bin details and disbursement capability on DDP Platform.

        * `moneyTransferIndicator` Specify non gaming transaction type supported by the card

        * `gamingIndicator` Specify gaming transaction type supported by the card

        * `fastFundsIndicator` Specify fast fund supported transaction type by the card

      type: object
      properties:
        disbursementIndicator:
          $ref: '#/components/schemas/DisbursementIndicator'
        brand:
          $ref: '#/components/schemas/CardBrand'
        moneyTransferIndicator:
          $ref: '#/components/schemas/TransactionSupportCode'
        gamingIndicator:
          $ref: '#/components/schemas/TransactionSupportCode'
        fastFundsIndicator:
          $ref: '#/components/schemas/TransactionSupportCode'
        lowBin:
          description: Card low bin.
          type: string
          example: '400023'
        highBin:
          description: Card high bin.
          type: string
          example: '400023'
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        issuerCountryCode:
          description: Iso alpha 3 card issuer country code. ex USA
          example: 'USA'
          type: string
        merchantCountryCode:
          description: Iso alpha 3 Merchant country code. ex USA
          example: 'USA'
          type: string
        currencyCode:
          description: Iso alpha 3 card billing currency code. ex USD
          example: 'USD'
          type: string
        cardType:
          $ref: '#/components/schemas/CardType'
        cardClass:
          $ref: '#/components/schemas/CardClass'
        issuerBankName:
          description: Card issuer bank name
          example: 'Navy Federal Credit Union'
          type: string

    ReferenceToken:
      description: Conditional, required when source is TOKEN. Surrogate value used to represent a handle to an account without sharing PCI data to look it up.
      type: object
      properties:
        tokenId:
          type: string
          description: Token value
          example: '292bb6b886fc4446894f878b7e32bd5e'
        tokenProvider:
          $ref: '#/components/schemas/TokenProvider'
    Card:
      description: Conditional, required when source is DEBIT. PAN details for lookup.
      type: object
      properties:
        cardNumber:
          type: string
          description: Encrypted PAN
          example: '4444333322221111'
    Ach:
      description: Conditional, required when source is RTP. contains bank account details.
      type: object
      properties:
        accountNumber:
          type: string
          description: Encrypted Bank account number
          example: '4444333322221111'
        routingNumber:
          type: string
          description: Bank routing number
          example: '026009593'
        type:
          $ref: '#/components/schemas/AccountType'

    #-------------------------------------
    # Enum Models
    #-------------------------------------

    TokenProvider:
      type: string
      description: token provider, should be one of these.
      enum:
        - TRANS_ARMOR
    AccountType:
      type: string
      description: Bank account type.
      example: SAVINGS
      enum:
        - CHECKING
        - SAVINGS
    DisbursementIndicator:
      description: >
        Specify card can be used for disbursement on DDP platform

        * `SUPPORTED` Card is supported for disbursement (For payment initiated by Merchant who is requesting account lookup)

        * `NOT_SUPPORTED` Card not supported

        * `CARD_BRAND_NOT_SUPPORTED` Card brand is not supported, DDP supports VISA, MASTERCARD

        * `MERCHANT_X_TRANS_NOT_SUPPORTED` Merchant is not enabled for cross border transactions

        * `SPONSOR_BANK_RESTRICTED_COUNTRY` Sponsor Bank for the merchant does not allow transactions to the card issuer country.

        * `MONEY_TRANSFER_NOT_SUPPORTED` Card do not support money transfer

        * `CARD_X_BORDER_NOT_SUPPORTED` Card do not support cross border transaction

        * `GAMING_TRANS_NOT_SUPPORTED` Applicable for Gaming Merchants. Card do not support Gaming transactions

        * `GAMING_TRANS_X_BORDER_NOT_SUPPORTED` Applicable for Gaming Merchants. Card do not support cross border Gaming transactions

        * `PAYOUT_RESTRICTED_COUNTRY` Disbursement to card issuer country is restricted by DDP

        * `SENDER_SOURCE_X_BORDER_NOT_SUPPORTED` Applicable only for Sender bin check, Sender is allowed to use only domestic cards for pull funds

        * `RECIPIENT_COUNTRY_NOT_ALLOWED` Disbursement to card issuer country is restricted by Merchant

        * `CARD_CLASS_NOT_SUPPORTED` Card class is restricted for disbursement

      type: string
      enum:
        - SUPPORTED
        - NOT_SUPPORTED
        - CARD_BRAND_NOT_SUPPORTED
        - MERCHANT_X_TRANS_NOT_SUPPORTED
        - SPONSOR_BANK_RESTRICTED_COUNTRY
        - MONEY_TRANSFER_NOT_SUPPORTED
        - CARD_X_BORDER_NOT_SUPPORTED
        - GAMING_TRANS_NOT_SUPPORTED
        - GAMING_TRANS_X_BORDER_NOT_SUPPORTED
        - PAYOUT_RESTRICTED_COUNTRY
        - SENDER_SOURCE_X_BORDER_NOT_SUPPORTED
        - CARD_CLASS_NOT_SUPPORTED
        - RECIPIENT_COUNTRY_NOT_ALLOWED
    CardBrand:
      type: string
      description: card brand
      enum:
        - VISA
        - MASTERCARD
        - AMEX
        - DISCOVER

    TransactionSupportCode:
      type: string
      description: >

        * `DOMESTIC` Card supports only domestic transactions.

        * `DOMESTIC_AND_CROSS_BORDER` Card supports domestic and cross border transactions.

        * `CROSS_BORDER` Card supports only cross border transactions.

        * `NOT_SUPPORTED` Card do not support disbursements.

        * `NOT_AVAILABLE` Card money transfer indicator not available.
      enum:
        - DOMESTIC
        - DOMESTIC_AND_CROSS_BORDER
        - NOT_SUPPORTED
        - NOT_AVAILABLE
        - CROSS_BORDER
    TransactionType:
      type: string
      description: transaction type based on Merchant country and card issuer country
      enum:
        - DOMESTIC
        - CROSS_BORDER
    CardType:
      type: string
      description: Type of CARD
      enum:
        - CREDIT
        - DEBIT
        - PREPAID
    CardClass:
      type: string
      description: Class of the Card
      enum:
        - BUSINESS
        - CONSUMER
        - CORPORATE
    RemittanceRole:
      description: Specify Party involved in P2P Money Transfer is Sender or Recipient
      type: string
      enum:
        - SENDER
        - RECIPIENT


  #-------------------------------------
  # Http Response Models
  #-------------------------------------

    NoContent:
      description: The request succeeded but there’s really nothing to show.

    BadRequest:
      description: Bad request
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized

    NotFound:
      description: Not Found - The requested resource doesn't exist.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    Conflict:
      description: Conflict - The requested operation conflicts with the current state of the identified resource.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    ServerError:
      description: An unexpected server error occurred.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    #-------------------------------------
    # Error Models
    #-------------------------------------

    Error:
      description: (Response Only) Model for error messaging
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              description: Detailed information about message format errors.
              type: array
              items:
                properties:
                  field:
                    description: The property or attribute associated with the error
                    type: string
                  message:
                    description: Information specific to a property or attribute.
                    type: string
        hostExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
      example:
        code: "40000"
        message: "Example Error"
        category: "example"
        developerInfo:
          developerMessage: "Invalid Message format in request payload"
          moreInfo: "https://www.example.com/errors/40000"
          fieldError:
            - field: "example id"
              message: "exampleId is mandatory"